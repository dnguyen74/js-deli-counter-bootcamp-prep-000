{
  "stats": {
    "suites": 4,
    "tests": 7,
    "passes": 4,
    "pending": 0,
    "failures": 3,
    "start": "2018-02-28T07:08:39.882Z",
    "end": "2018-02-28T07:08:40.436Z",
    "duration": 554
  },
  "tests": [
    {
      "title": "adds a person to the line",
      "fullTitle": "deli takeANumber adds a person to the line",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "appends the person the end of the line if there are already people on it",
      "fullTitle": "deli takeANumber appends the person the end of the line if there are already people on it",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "properly handles multiple people being added",
      "fullTitle": "deli takeANumber properly handles multiple people being added",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the line is empty when no one is on line",
      "fullTitle": "deli nowServing returns the line is empty when no one is on line",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns an announcement about the person it is serving, and shifts the line",
      "fullTitle": "deli nowServing returns an announcement about the person it is serving, and shifts the line",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Expected 'Currently serving Steven' to equal 'Currently serving Steven.'\n    at assert (node_modules/expect/lib/assert.js:29:9)\n    at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)\n    at Context.it (test/index-test.js:39:36)",
        "message": "Expected 'Currently serving Steven' to equal 'Currently serving Steven.'",
        "actual": "Currently serving Steven",
        "expected": "Currently serving Steven.",
        "showDiff": true
      }
    },
    {
      "title": "returns \"The line is currently empty.\" if no one is in line",
      "fullTitle": "deli currentLine(line) returns \"The line is currently empty.\" if no one is in line",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: currentLine is not defined\n    at Context.it (test/index-test.js:46:7)",
        "message": "currentLine is not defined"
      }
    },
    {
      "title": "says who is in line when there are people waiting",
      "fullTitle": "deli currentLine(line) says who is in line when there are people waiting",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: currentLine is not defined\n    at Context.it (test/index-test.js:50:7)",
        "message": "currentLine is not defined"
      }
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "returns an announcement about the person it is serving, and shifts the line",
      "fullTitle": "deli nowServing returns an announcement about the person it is serving, and shifts the line",
      "duration": 1,
      "currentRetry": 0,
      "err": {
        "stack": "Error: Expected 'Currently serving Steven' to equal 'Currently serving Steven.'\n    at assert (node_modules/expect/lib/assert.js:29:9)\n    at Expectation.toEqual (node_modules/expect/lib/Expectation.js:81:30)\n    at Context.it (test/index-test.js:39:36)",
        "message": "Expected 'Currently serving Steven' to equal 'Currently serving Steven.'",
        "actual": "Currently serving Steven",
        "expected": "Currently serving Steven.",
        "showDiff": true
      }
    },
    {
      "title": "returns \"The line is currently empty.\" if no one is in line",
      "fullTitle": "deli currentLine(line) returns \"The line is currently empty.\" if no one is in line",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: currentLine is not defined\n    at Context.it (test/index-test.js:46:7)",
        "message": "currentLine is not defined"
      }
    },
    {
      "title": "says who is in line when there are people waiting",
      "fullTitle": "deli currentLine(line) says who is in line when there are people waiting",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "ReferenceError: currentLine is not defined\n    at Context.it (test/index-test.js:50:7)",
        "message": "currentLine is not defined"
      }
    }
  ],
  "passes": [
    {
      "title": "adds a person to the line",
      "fullTitle": "deli takeANumber adds a person to the line",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "appends the person the end of the line if there are already people on it",
      "fullTitle": "deli takeANumber appends the person the end of the line if there are already people on it",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "properly handles multiple people being added",
      "fullTitle": "deli takeANumber properly handles multiple people being added",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the line is empty when no one is on line",
      "fullTitle": "deli nowServing returns the line is empty when no one is on line",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}